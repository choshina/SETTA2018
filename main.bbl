\begin{thebibliography}{10}
\providecommand{\url}[1]{\texttt{#1}}
\providecommand{\urlprefix}{URL }
\providecommand{\doi}[1]{https://doi.org/#1}

\bibitem{DBLP:journals/stvr/ArthoHB03}
Artho, C., Havelund, K., Biere, A.: High-level data races. Softw. Test., Verif.
  Reliab.  \textbf{13}(4),  207--227 (2003)

\bibitem{Ben2003Heuristics}
Ben-Asher, Y., Farchi, E., Eytani, Y.: Heuristics for finding concurrent bugs.
  Proc. IPDPS 2003. pp.
  288a--288a (2003)

\bibitem{DBLP:conf/popl/BouajjaniEEH15}
Bouajjani, A., Emmi, M., Enea, C., Hamza, J.: Tractable refinement checking for
  concurrent objects. In: %Proceedings of the 42nd Annual {ACM}
  {SIGPLAN-SIGACT} Symposium on %Principles of Programming Languages, {POPL}
  2015, Mumbai, India, January %15-17, 2015 Proc. POPL 2015. pp. 651--662
  (2015)

\bibitem{DBLP:conf/pldi/BurckhardtDMT10}
Burckhardt, S., Dern, C., Musuvathi, M., Tan, R.: Line-up: a complete and
  automatic linearizability checker. In Proc. PLDI 2010. pp.
  330--340 (2010)

\bibitem{Choi2000Deterministic}
Choi, J.D., Srinivasan, H.: Deterministic replay of java multithreaded
  applications. Proceedings of the Sigmetrics Symposium on Parallel \&
  Distributed Tools pp. 48--59 (2000)

\bibitem{DBLP:journals/concurrency/EdelsteinFGNRU03}
Edelstein, O., Farchi, E., Goldin, E., Nir, Y., Ratsaby, G., Ur, S.: Framework
  for testing multi-threaded java programs. Concurrency and Computation:
  Practice and Experience  \textbf{15}(3-5),  485--499 (2003)

\bibitem{DBLP:conf/pldi/EmmiEH15}
Emmi, M., Enea, C., Hamza, J.: Monitoring refinement via symbolic reasoning.
  In: %Proceedings of the 36th {ACM} {SIGPLAN} Conference on Programming
  %Language Design and Implementation, Portland, OR, USA, June 15-17, %2015
  Proc. PLDI 2015. pp. 260--269 (2015)

\bibitem{DBLP:conf/ipps/FarchiNU03}
Farchi, E., Nir, Y., Ur, S.: Concurrent bug patterns and how to test them. In:
  Abstracts Proceedings 
  IPDPS 2003. p.~286 (2003)

\bibitem{DBLP:conf/IEEEpact/GottschlichPPW13}
Gottschlich, J.E., Pokam, G., Pereira, C., Wu, Y.: Concurrent predicates: {A}
  debugging technique for every parallel programmer. In Proc. PACT
  2013. pp. 331--340 (2013)

\bibitem{DBLP:journals/toplas/HerlihyW90}
Herlihy, M., Wing, J.M.: Linearizability: {A} correctness condition for
  concurrent objects. {ACM} Trans. Program. Lang. Syst.  \textbf{12}(3),
  463--492 (1990)

\bibitem{DBLP:conf/forte/HornK15a}
Horn, A., Kroening, D.: Faster linearizability checking via p-compositionality.
  In Proc. FORTE 2015. pp. 50--65 (2015)

\bibitem{DBLP:conf/issta/KhoshnoodKW15}
Khoshnood, S., Kusano, M., Wang, C.: Concbugassist: constraint solving for
  diagnosis and repair of concurrency bugs. In Proc. ISSTA 2015. pp. 165--176 (2015)

\bibitem{DBLP:conf/icsm/LiuQWM14}
Liu, B., Qi, Z., Wang, B., Ma, R.: Pinso: Precise isolation of concurrency bugs
  via delta triaging. In Proc. ICSM 2014. pp. 201--210 (2014)

\bibitem{DBLP:conf/sac/LongZ16}
Long, Z., Zhang, Y.: Checking linearizability with fine-grained traces. In Proc. SAC 2016. pp. 1394--1400 (2016)

\bibitem{DBLP:journals/concurrency/Lowe17}
Lowe, G.: Testing for linearizability. Concurrency and Computation: Practice
  and Experience  \textbf{29}(4) (2017)

\bibitem{DBLP:conf/asplos/LuPSZ08}
Lu, S., Park, S., Seo, E., Zhou, Y.: Learning from mistakes: a comprehensive
  study on real world concurrency bug characteristics. In Proc. ASPLOS 2008. pp. 329--339 (2008)

\bibitem{DBLP:conf/pldi/MusuvathiQ07}
Musuvathi, M., Qadeer, S.: Iterative context bounding for systematic testing of
  multithreaded programs. In Proc. PLDI 2007. pp. 446--455 (2007)

\bibitem{DBLP:conf/ppopp/ParkS12}
Park, C., Sen, K.: Concurrent breakpoints. In Proc. PPOPP 2012.
  pp. 331--332 (2012)

\bibitem{DBLP:conf/icse/Park04}
Park, S.: Fault comprehension for concurrent programs. In Proc. ICSE 2013. pp. 1444--1446 (2013)

\bibitem{DBLP:conf/icse/ParkVH10}
Park, S., Vuduc, R.W., Harrold, M.J.: Falcon: fault localization in concurrent
  programs. In Proc. ICSE 2010. pp. 245--254 (2010)

\bibitem{DBLP:conf/icst/ParkVH12}
Park, S., Vuduc, R.W., Harrold, M.J.: A unified approach for localizing
  non-deadlock concurrency bugs. In Proc. ICST 2012. pp. 51--60 (2012)

\bibitem{DBLP:conf/oopsla/ShiPYLZCZ10}
Shi, Y., Park, S., Yin, Z., Lu, S., Zhou, Y., Chen, W., Zheng, W.: Do {I} use
  the wrong definition?: Defuse: definition-use invariants for detecting
  concurrency and sequential bugs. In
  Proc. OOPSLA 2010. pp. 160--174 (2010)

\bibitem{DBLP:journals/entcs/Stoller02}
Stoller, S.D.: Testing concurrent java programs using randomized scheduling.
  Electr. Notes Theor. Comput. Sci.  \textbf{70}(4),  142--157 (2002)

\bibitem{DBLP:journals/jpdc/WingG93}
Wing, J.M., Gong, C.: Testing and verifying concurrent objects. J. Parallel
  Distrib. Comput.  \textbf{17}(1-2),  164--182 (1993)

\bibitem{DBLP:conf/seke/ZhangWZ17}
Zhang, Z., Wu, P., Zhang, Y.: Localization of linearizability faults on the
  coarse-grained level. In Proc. SEKE 2017. pp. 272--277 (2017)

\end{thebibliography}
