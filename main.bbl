\begin{thebibliography}{10}
\providecommand{\url}[1]{\texttt{#1}}
\providecommand{\urlprefix}{URL }
\providecommand{\doi}[1]{https://doi.org/#1}

\bibitem{DBLP:journals/stvr/ArthoHB03}
Artho, C., Havelund, K., Biere, A.: High-level data races. Softw. Test., Verif.
  Reliab.  \textbf{13}(4),  207--227 (2003)

\bibitem{Ben2003Heuristics}
Ben-Asher, Y., Farchi, E., Eytani, Y.: Heuristics for finding concurrent bugs.
  In: International Symposium on Parallel and Distributed Processing. pp.
  288a--288a (2003)

\bibitem{DBLP:conf/popl/BouajjaniEEH15}
Bouajjani, A., Emmi, M., Enea, C., Hamza, J.: Tractable refinement checking for
  concurrent objects. In: Rajamani, S.K., Walker, D. (eds.) Proceedings of the
  42nd Annual {ACM} {SIGPLAN-SIGACT} Symposium on Principles of Programming
  Languages, {POPL} 2015, Mumbai, India, January 15-17, 2015. pp. 651--662.
  {ACM} (2015)

\bibitem{DBLP:conf/pldi/BurckhardtDMT10}
Burckhardt, S., Dern, C., Musuvathi, M., Tan, R.: Line-up: a complete and
  automatic linearizability checker. In: Zorn, B.G., Aiken, A. (eds.)
  Proceedings of the 2010 {ACM} {SIGPLAN} Conference on Programming Language
  Design and Implementation, {PLDI} 2010, Toronto, Ontario, Canada, June 5-10,
  2010. pp. 330--340. {ACM} (2010)

\bibitem{Choi2000Deterministic}
Choi, J.D., Srinivasan, H.: Deterministic replay of java multithreaded
  applications. Proceedings of the Sigmetrics Symposium on Parallel \&
  Distributed Tools pp. 48--59 (2000)

\bibitem{DBLP:conf/spaa/DohertyDGFLMMSS04}
Doherty, S., Detlefs, D., Groves, L., Flood, C.H., Luchangco, V., Martin, P.A.,
  Moir, M., Shavit, N., Jr., G.L.S.: {DCAS} is not a silver bullet for
  nonblocking algorithm design. In: Gibbons, P.B., Adler, M. (eds.) {SPAA}
  2004: Proceedings of the Sixteenth Annual {ACM} Symposium on Parallelism in
  Algorithms and Architectures, June 27-30, 2004, Barcelona, Spain. pp.
  216--224. {ACM} (2004)

\bibitem{DBLP:journals/concurrency/EdelsteinFGNRU03}
Edelstein, O., Farchi, E., Goldin, E., Nir, Y., Ratsaby, G., Ur, S.: Framework
  for testing multi-threaded java programs. Concurrency and Computation:
  Practice and Experience  \textbf{15}(3-5),  485--499 (2003)

\bibitem{DBLP:conf/pldi/EmmiEH15}
Emmi, M., Enea, C., Hamza, J.: Monitoring refinement via symbolic reasoning.
  In: Grove, D., Blackburn, S. (eds.) Proceedings of the 36th {ACM} {SIGPLAN}
  Conference on Programming Language Design and Implementation, Portland, OR,
  USA, June 15-17, 2015. pp. 260--269. {ACM} (2015)

\bibitem{DBLP:conf/ipps/FarchiNU03}
Farchi, E., Nir, Y., Ur, S.: Concurrent bug patterns and how to test them. In:
  17th International Parallel and Distributed Processing Symposium {(IPDPS}
  2003), 22-26 April 2003, Nice, France, CD-ROM/Abstracts Proceedings. p.~286.
  {IEEE} Computer Society (2003)

\bibitem{DBLP:conf/IEEEpact/GottschlichPPW13}
Gottschlich, J.E., Pokam, G., Pereira, C., Wu, Y.: Concurrent predicates: {A}
  debugging technique for every parallel programmer. In: Fensch, C., O'Boyle,
  M.F.P., Seznec, A., Bodin, F. (eds.) Proceedings of the 22nd International
  Conference on Parallel Architectures and Compilation Techniques, Edinburgh,
  United Kingdom, September 7-11, 2013. pp. 331--340. {IEEE} Computer Society
  (2013)

\bibitem{herlihy2012art}
Herlihy, M., Shavit, N.: The Art of Multiprocessor Programming. Elsevier (2012)

\bibitem{DBLP:journals/toplas/HerlihyW90}
Herlihy, M., Wing, J.M.: Linearizability: {A} correctness condition for
  concurrent objects. {ACM} Trans. Program. Lang. Syst.  \textbf{12}(3),
  463--492 (1990)

\bibitem{DBLP:conf/forte/HornK15a}
Horn, A., Kroening, D.: Faster linearizability checking via p-compositionality.
  In: Graf, S., Viswanathan, M. (eds.) Formal Techniques for Distributed
  Objects, Components, and Systems - 35th {IFIP} {WG} 6.1 International
  Conference, {FORTE} 2015, Held as Part of the 10th International Federated
  Conference on Distributed Computing Techniques, DisCoTec 2015, Grenoble,
  France, June 2-4, 2015, Proceedings. Lecture Notes in Computer Science,
  vol.~9039, pp. 50--65. Springer (2015)

\bibitem{DBLP:conf/issta/KhoshnoodKW15}
Khoshnood, S., Kusano, M., Wang, C.: Concbugassist: constraint solving for
  diagnosis and repair of concurrency bugs. In: Young, M., Xie, T. (eds.)
  Proceedings of the 2015 International Symposium on Software Testing and
  Analysis, {ISSTA} 2015, Baltimore, MD, USA, July 12-17, 2015. pp. 165--176.
  {ACM} (2015)

\bibitem{DBLP:conf/wdag/Ladan-MozesS04}
Ladan{-}Mozes, E., Shavit, N.: An optimistic approach to lock-free {FIFO}
  queues. In: Guerraoui, R. (ed.) Distributed Computing, 18th International
  Conference, {DISC} 2004, Amsterdam, The Netherlands, October 4-7, 2004,
  Proceedings. Lecture Notes in Computer Science, vol.~3274, pp. 117--131.
  Springer (2004)

\bibitem{DBLP:conf/icsm/LiuQWM14}
Liu, B., Qi, Z., Wang, B., Ma, R.: Pinso: Precise isolation of concurrency bugs
  via delta triaging. In: 30th {IEEE} International Conference on Software
  Maintenance and Evolution, Victoria, BC, Canada, September 29 - October 3,
  2014. pp. 201--210. {IEEE} Computer Society (2014)

\bibitem{DBLP:conf/sac/LongZ16}
Long, Z., Zhang, Y.: Checking linearizability with fine-grained traces. In:
  Ossowski, S. (ed.) Proceedings of the 31st Annual {ACM} Symposium on Applied
  Computing, Pisa, Italy, April 4-8, 2016. pp. 1394--1400. {ACM} (2016)

\bibitem{DBLP:journals/concurrency/Lowe17}
Lowe, G.: Testing for linearizability. Concurrency and Computation: Practice
  and Experience  \textbf{29}(4) (2017)

\bibitem{DBLP:conf/asplos/LuPSZ08}
Lu, S., Park, S., Seo, E., Zhou, Y.: Learning from mistakes: a comprehensive
  study on real world concurrency bug characteristics. In: Eggers, S.J., Larus,
  J.R. (eds.) Proceedings of the 13th International Conference on Architectural
  Support for Programming Languages and Operating Systems, {ASPLOS} 2008,
  Seattle, WA, USA, March 1-5, 2008. pp. 329--339. {ACM} (2008)

\bibitem{DBLP:conf/pldi/MusuvathiQ07}
Musuvathi, M., Qadeer, S.: Iterative context bounding for systematic testing of
  multithreaded programs. In: Ferrante, J., McKinley, K.S. (eds.) Proceedings
  of the {ACM} {SIGPLAN} 2007 Conference on Programming Language Design and
  Implementation, San Diego, California, USA, June 10-13, 2007. pp. 446--455.
  {ACM} (2007)

\bibitem{DBLP:conf/ppopp/ParkS12}
Park, C., Sen, K.: Concurrent breakpoints. In: Ramanujam, J., Sadayappan, P.
  (eds.) Proceedings of the 17th {ACM} {SIGPLAN} Symposium on Principles and
  Practice of Parallel Programming, {PPOPP} 2012, New Orleans, LA, USA,
  February 25-29, 2012. pp. 331--332. {ACM} (2012)

\bibitem{DBLP:conf/icse/Park04}
Park, S.: Fault comprehension for concurrent programs. In: Notkin, D., Cheng,
  B.H.C., Pohl, K. (eds.) 35th International Conference on Software
  Engineering, {ICSE} '13, San Francisco, CA, USA, May 18-26, 2013. pp.
  1444--1446. {IEEE} Computer Society (2013)

\bibitem{DBLP:conf/icse/ParkVH10}
Park, S., Vuduc, R.W., Harrold, M.J.: Falcon: fault localization in concurrent
  programs. In: Kramer, J., Bishop, J., Devanbu, P.T., Uchitel, S. (eds.)
  Proceedings of the 32nd {ACM/IEEE} International Conference on Software
  Engineering - Volume 1, {ICSE} 2010, Cape Town, South Africa, 1-8 May 2010.
  pp. 245--254. {ACM} (2010)

\bibitem{DBLP:conf/icst/ParkVH12}
Park, S., Vuduc, R.W., Harrold, M.J.: A unified approach for localizing
  non-deadlock concurrency bugs. In: Antoniol, G., Bertolino, A., Labiche, Y.
  (eds.) Fifth {IEEE} International Conference on Software Testing,
  Verification and Validation, {ICST} 2012, Montreal, QC, Canada, April 17-21,
  2012. pp. 51--60. {IEEE} Computer Society (2012)

\bibitem{DBLP:conf/oopsla/ShiPYLZCZ10}
Shi, Y., Park, S., Yin, Z., Lu, S., Zhou, Y., Chen, W., Zheng, W.: Do {I} use
  the wrong definition?: Defuse: definition-use invariants for detecting
  concurrency and sequential bugs. In: Cook, W.R., Clarke, S., Rinard, M.C.
  (eds.) Proceedings of the 25th Annual {ACM} {SIGPLAN} Conference on
  Object-Oriented Programming, Systems, Languages, and Applications, {OOPSLA}
  2010, October 17-21, 2010, Reno/Tahoe, Nevada, {USA}. pp. 160--174. {ACM}
  (2010)

\bibitem{DBLP:journals/entcs/Stoller02}
Stoller, S.D.: Testing concurrent java programs using randomized scheduling.
  Electr. Notes Theor. Comput. Sci.  \textbf{70}(4),  142--157 (2002)

\bibitem{DBLP:conf/pldi/VechevY08}
Vechev, M.T., Yahav, E.: Deriving linearizable fine-grained concurrent objects.
  In: Gupta, R., Amarasinghe, S.P. (eds.) Proceedings of the {ACM} {SIGPLAN}
  2008 Conference on Programming Language Design and Implementation, Tucson,
  AZ, USA, June 7-13, 2008. pp. 125--135. {ACM} (2008)

\bibitem{DBLP:journals/jpdc/WingG93}
Wing, J.M., Gong, C.: Testing and verifying concurrent objects. J. Parallel
  Distrib. Comput.  \textbf{17}(1-2),  164--182 (1993)

\bibitem{DBLP:conf/seke/ZhangWZ17}
Zhang, Z., Wu, P., Zhang, Y.: Localization of linearizability faults on the
  coarse-grained level. In: He, X. (ed.) The 29th International Conference on
  Software Engineering and Knowledge Engineering, Wyndham Pittsburgh University
  Center, Pittsburgh, PA, USA, July 5-7, 2017. pp. 272--277. {KSI} Research
  Inc. and Knowledge Systems Institute Graduate School (2017)

\end{thebibliography}
